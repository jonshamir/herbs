{"version":3,"sources":["utils/math.js","components/HerbTree/HerbTree.js","pages/HomePage/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["defined","require","EPSILON","Number","clamp","value","min","max","lerp","t","inverseLerp","Math","abs","toFinite","n","defaultValue","isFinite","expandVector","dims","TypeError","p","scalar","i","out","lerpArray","length","newArray","initialValue","push","mod","a","b","damp","lambda","dt","exp","len2D","x","y","sqrt","module","exports","fract","floor","sign","degToRad","PI","radToDeg","pingPong","linspace","opts","endpoint","offset","map","_","lerpFrames","values","len","whole","frame","nextFrame","Array","isArray","clamp01","v","smoothstep","dampArray","mapRange","inputMin","inputMax","outputMin","outputMax","outVal","expand2D","expand3D","expand4D","normalize2D","dist2D","v1","v2","graphEl","simulation","width","height","imageSize","HerbTree","props","d3ref","React","createRef","this","setGraphSize","herbHierarchyPruned","removeSingleChildren","JSON","parse","stringify","herbHierarchy","graph","window","scrollTo","document","body","scrollHeight","addEventListener","e","handleResize","event","node","w","documentElement","clientWidth","h","clientHeight","d3","attr","alphaTarget","restart","nodePositions","nodes","forEach","data","id","console","log","className","ref","Component","children","rank","name","slug","setSubtreeActive","root","isActive","d","linkLength","link","source","target","parentComponent","links","descendants","initialNodePositions","fixed","fx","fy","alphaDecay","force","distance","strength","radius","alpha","parent","wallRepulsionX","svg","current","append","selectAll","join","classed","call","on","active","filter","collisionRadius","text","herbData","hebrewName","setTimeout","growthTime","transition","delay","depth","duration","ease","end","then","classList","add","remove","handleClick","select","transform","deltaX","deltaY","angle","atan2","xPos","yPos","dir","HomePage","handleNodeClick","setState","redirect","state","to","onNodeClick","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ea606d34.chunk.js","sourcesContent":["var defined = require(\"defined\");\nvar EPSILON = Number.EPSILON;\n\nfunction clamp(value, min, max) {\n  return min < max\n    ? value < min\n      ? min\n      : value > max\n      ? max\n      : value\n    : value < max\n    ? max\n    : value > min\n    ? min\n    : value;\n}\n\nfunction clamp01(v) {\n  return clamp(v, 0, 1);\n}\n\nfunction lerp(min, max, t) {\n  return min * (1 - t) + max * t;\n}\n\nfunction inverseLerp(min, max, t) {\n  if (Math.abs(min - max) < EPSILON) return 0;\n  else return (t - min) / (max - min);\n}\n\nfunction smoothstep(min, max, t) {\n  var x = clamp(inverseLerp(min, max, t), 0, 1);\n  return x * x * (3 - 2 * x);\n}\n\nfunction toFinite(n, defaultValue) {\n  defaultValue = defined(defaultValue, 0);\n  return typeof n === \"number\" && isFinite(n) ? n : defaultValue;\n}\n\nfunction expandVector(dims) {\n  if (typeof dims !== \"number\") throw new TypeError(\"Expected dims argument\");\n  return function (p, defaultValue) {\n    defaultValue = defined(defaultValue, 0);\n    var scalar;\n    if (p == null) {\n      // No vector, create a default one\n      scalar = defaultValue;\n    } else if (typeof p === \"number\" && isFinite(p)) {\n      // Expand single channel to multiple vector\n      scalar = p;\n    }\n\n    var out = [];\n    var i;\n    if (scalar == null) {\n      for (i = 0; i < dims; i++) {\n        out[i] = toFinite(p[i], defaultValue);\n      }\n    } else {\n      for (i = 0; i < dims; i++) {\n        out[i] = scalar;\n      }\n    }\n    return out;\n  };\n}\n\nfunction lerpArray(min, max, t, out) {\n  out = out || [];\n  if (min.length !== max.length) {\n    throw new TypeError(\n      \"min and max array are expected to have the same length\"\n    );\n  }\n  for (var i = 0; i < min.length; i++) {\n    out[i] = lerp(min[i], max[i], t);\n  }\n  return out;\n}\n\nfunction newArray(n, initialValue) {\n  n = defined(n, 0);\n  if (typeof n !== \"number\")\n    throw new TypeError(\"Expected n argument to be a number\");\n  var out = [];\n  for (var i = 0; i < n; i++) out.push(initialValue);\n  return out;\n}\n\nfunction linspace(n, opts) {\n  n = defined(n, 0);\n  if (typeof n !== \"number\")\n    throw new TypeError(\"Expected n argument to be a number\");\n  opts = opts || {};\n  if (typeof opts === \"boolean\") {\n    opts = { endpoint: true };\n  }\n  var offset = defined(opts.offset, 0);\n  if (opts.endpoint) {\n    return newArray(n).map(function (_, i) {\n      return n <= 1 ? 0 : (i + offset) / (n - 1);\n    });\n  } else {\n    return newArray(n).map(function (_, i) {\n      return (i + offset) / n;\n    });\n  }\n}\n\nfunction lerpFrames(values, t, out) {\n  t = clamp(t, 0, 1);\n\n  var len = values.length - 1;\n  var whole = t * len;\n  var frame = Math.floor(whole);\n  var fract = whole - frame;\n\n  var nextFrame = Math.min(frame + 1, len);\n  var a = values[frame % values.length];\n  var b = values[nextFrame % values.length];\n  if (typeof a === \"number\" && typeof b === \"number\") {\n    return lerp(a, b, fract);\n  } else if (Array.isArray(a) && Array.isArray(b)) {\n    return lerpArray(a, b, fract, out);\n  } else {\n    throw new TypeError(\n      \"Mismatch in value type of two array elements: \" +\n        frame +\n        \" and \" +\n        nextFrame\n    );\n  }\n}\n\nfunction mod(a, b) {\n  return ((a % b) + b) % b;\n}\n\nfunction degToRad(n) {\n  return (n * Math.PI) / 180;\n}\n\nfunction radToDeg(n) {\n  return (n * 180) / Math.PI;\n}\n\nfunction fract(n) {\n  return n - Math.floor(n);\n}\n\nfunction sign(n) {\n  if (n > 0) return 1;\n  else if (n < 0) return -1;\n  else return 0;\n}\n\nfunction pingPong(t, length) {\n  t = mod(t, length * 2);\n  return length - Math.abs(t - length);\n}\n\nfunction damp(a, b, lambda, dt) {\n  return lerp(a, b, 1 - Math.exp(-lambda * dt));\n}\n\nfunction dampArray(a, b, lambda, dt, out) {\n  out = out || [];\n  for (var i = 0; i < a.length; i++) {\n    out[i] = damp(a[i], b[i], lambda, dt);\n  }\n  return out;\n}\n\nfunction normalize2D(x, y) {\n  const len = len2D(x, y);\n  return { x: x / len, y: y / len };\n}\n\nfunction len2D(x, y) {\n  return Math.sqrt(x * x + y * y);\n}\n\nfunction mapRange(value, inputMin, inputMax, outputMin, outputMax, clamp) {\n  // Reference:\n  // https://openframeworks.cc/documentation/math/ofMath/\n  if (Math.abs(inputMin - inputMax) < EPSILON) {\n    return outputMin;\n  } else {\n    var outVal =\n      ((value - inputMin) / (inputMax - inputMin)) * (outputMax - outputMin) +\n      outputMin;\n    if (clamp) {\n      if (outputMax < outputMin) {\n        if (outVal < outputMax) outVal = outputMax;\n        else if (outVal > outputMin) outVal = outputMin;\n      } else {\n        if (outVal > outputMax) outVal = outputMax;\n        else if (outVal < outputMin) outVal = outputMin;\n      }\n    }\n    return outVal;\n  }\n}\n\nfunction dist2D(v1, v2) {\n  return len2D(v1.x - v2.x, v1.y - v2.y);\n}\n\nmodule.exports = {\n  mod: mod,\n  fract: fract,\n  sign: sign,\n  degToRad: degToRad,\n  radToDeg: radToDeg,\n  pingPong: pingPong,\n  linspace: linspace,\n  lerp: lerp,\n  lerpArray: lerpArray,\n  inverseLerp: inverseLerp,\n  lerpFrames: lerpFrames,\n  clamp: clamp,\n  clamp01: clamp01,\n  smoothstep: smoothstep,\n  damp: damp,\n  dampArray: dampArray,\n  mapRange: mapRange,\n  expand2D: expandVector(2),\n  expand3D: expandVector(3),\n  expand4D: expandVector(4),\n  normalize2D: normalize2D,\n  len2D: len2D,\n  dist2D: dist2D,\n};\n","import React from \"react\";\nimport * as d3 from \"d3\";\n\nimport { radToDeg, normalize2D, dist2D } from \"../../utils/math\";\n\nimport herbHierarchy from \"../../data/herbHierarchy.json\";\nimport herbData from \"../../data/herbData.json\";\nimport initialNodePositions from \"../../data/initialNodePositions.json\";\n\nimport \"./HerbTree.scss\";\n\nlet width = 400;\nlet height = 400;\nconst radius = 3;\nconst marginX = 5;\nconst marginY = 20;\nconst offsetX = -50;\nconst imageSize = 40;\nconst collisionRadius = 16;\n\nlet graphEl;\nlet simulation;\n\nclass HerbTree extends React.Component {\n  constructor(props) {\n    super(props);\n    this.d3ref = React.createRef();\n  }\n\n  componentDidMount() {\n    this.setGraphSize();\n\n    const herbHierarchyPruned = removeSingleChildren(\n      JSON.parse(JSON.stringify(herbHierarchy))\n    );\n    graphEl = graph(this.d3ref, herbHierarchyPruned, this);\n\n    window.scrollTo(0, document.body.scrollHeight);\n    window.addEventListener(\"resize\", (e) => this.handleResize(e));\n  }\n\n  handleResize(e) {\n    this.setGraphSize();\n  }\n\n  handleClick(event, node) {\n    // this.props.onNodeClick(node.data);\n  }\n\n  setGraphSize() {\n    const w = document.documentElement.clientWidth;\n    const h = document.documentElement.clientHeight;\n    width = w / 2;\n    height = h;\n    d3.select(graphEl).attr(\"viewBox\", [\n      -width / 2,\n      -height / 2,\n      width,\n      height,\n    ]);\n    if (simulation) simulation.alphaTarget(0.1).restart();\n\n    // TODO update root node positions\n  }\n\n  logPositions() {\n    const nodePositions = {};\n    simulation.nodes().forEach((node, i) => {\n      nodePositions[node.data.id] = { x: node.x, y: node.y };\n    });\n    console.log(JSON.stringify(nodePositions));\n  }\n\n  render() {\n    return (\n      <div className=\"HerbTree\">\n        {/*<button onClick={this.logPositions}>Get positions</button>*/}\n        <div ref={this.d3ref}></div>\n      </div>\n    );\n  }\n}\n\nconst removeSingleChildren = (node) => {\n  if (node.children) node.children.forEach(removeSingleChildren);\n  if (\n    node.children &&\n    node.children.length === 1 &&\n    node.rank !== \"Cladus\"\n    //  && node.rank !== \"Familia\"\n  ) {\n    const { children, name, id, slug } = node.children[0];\n    node.id = id;\n    node.children = children;\n    node.name = name;\n    node.slug = slug;\n  }\n  return node;\n};\n\nconst drag = (simulation) => {\n  function dragstarted(event, d) {\n    if (!event.active) simulation.alphaTarget(0.3).restart();\n    d.fx = d.x;\n    d.fy = d.y;\n  }\n\n  function dragged(event, d) {\n    d.fx = event.x;\n    d.fy = event.y;\n  }\n\n  function dragended(event, d) {\n    if (!event.active) simulation.alphaTarget(0);\n    d.fx = null;\n    d.fy = null;\n  }\n\n  return d3\n    .drag()\n    .on(\"start\", dragstarted)\n    .on(\"drag\", dragged)\n    .on(\"end\", dragended);\n};\n\nconst setSubtreeActive = (root, isActive) => {\n  root.isActive = isActive;\n  root.children && root.children.forEach((d) => setSubtreeActive(d, isActive));\n};\n\nconst linkLength = (link) => {\n  return dist2D(link.source, link.target) + 3;\n};\n\nconst graph = (ref, data, parentComponent) => {\n  const root = d3.hierarchy(data);\n  const links = root.links();\n  const nodes = root.descendants();\n  nodes.forEach((node, i) => {\n    const { id } = node.data;\n    if (id !== 1000 && initialNodePositions[id]) {\n      const { x, y } = initialNodePositions[id];\n      node.x = x;\n      node.y = y;\n    }\n  });\n\n  root.fixed = true;\n  root.fx = offsetX;\n  root.fy = 0.5 * height - 1 * marginY;\n\n  simulation = d3\n    .forceSimulation(nodes)\n    .alphaDecay(0.05)\n    .force(\n      \"link\",\n      d3\n        .forceLink(links)\n        .id((d) => d.id)\n        .distance(40)\n        .strength(1)\n    )\n    .force(\"charge\", d3.forceManyBody().strength(-80))\n    .force(\n      \"collision\",\n      d3.forceCollide().radius((d) => (d.children ? 2 : collisionRadius))\n    )\n    .force(\"x\", d3.forceX(offsetX))\n    .force(\"y\", d3.forceY())\n    .force(\"growth\", (alpha) => {\n      nodes.forEach((node) => {\n        // Cause nodes to be above their parents\n        if (node.parent && node.y > node.parent.y - 100) {\n          node.y -= alpha * 6;\n        }\n      });\n    })\n    .force(\"bounding\", (alpha) => {\n      // Repel walls\n      nodes.forEach((node) => {\n        const wallRepulsionX =\n          alpha * Math.max(1, Math.abs(node.x) - (width / 2 - marginX));\n        node.x -= Math.sign(node.x) * wallRepulsionX;\n        // const wallRepulsionY =\n        //   alpha * Math.max(1, Math.abs(node.y) - (height / 2 - marginY));\n        // node.y -= Math.sign(node.y) * wallRepulsionY;\n      });\n    });\n\n  const svg = d3\n    .select(ref.current)\n    .append(\"svg\")\n    .attr(\"class\", \"graphContainer\")\n    .attr(\"viewBox\", [-width / 2, -height / 2, width, height]);\n\n  const link = svg\n    .append(\"g\")\n    .selectAll(\"line\")\n    .data(links)\n    .join(\"line\")\n    .attr(\"class\", \"link\")\n    .attr(\"opacity\", 0);\n\n  const node = svg\n    .append(\"g\")\n    .selectAll(\"g\")\n    .data(nodes)\n    .join(\"g\")\n    .attr(\"class\", \"node\")\n    .classed(\"internode\", (d) => d.children)\n    .classed(\"leaf\", (d) => !d.children)\n    .attr(\"id\", (d) => d.data.id)\n    .call(drag(simulation));\n\n  node\n    .filter((d) => d.children)\n    .append(\"circle\")\n    .attr(\"r\", 0.5 * radius)\n    .attr(\"opacity\", 0);\n\n  node\n    .filter((d) => !d.children)\n    .append(\"svg:image\")\n    .attr(\"xlink:href\", (d) => `./images/icons/${d.data.slug}.png`)\n    .on(\"error\", function (d) {\n      d3.select(this).attr(\"xlink:href\", \"./images/herb.png\");\n    })\n    .attr(\"x\", -imageSize / 2)\n    .attr(\"y\", -imageSize / 2)\n    .attr(\"width\", imageSize)\n    .attr(\"height\", imageSize)\n    .attr(\"opacity\", 0);\n\n  node\n    .filter((d) => !d.children)\n    .append(\"circle\")\n    .attr(\"r\", collisionRadius + 4);\n\n  const text = svg\n    .append(\"g\")\n    .selectAll(\"g\")\n    .data(nodes)\n    .join(\"g\")\n    .append(\"text\")\n    .text((d) => (d.children ? d.data.name : herbData[d.data.id].hebrewName))\n    .attr(\"class\", \"nodeText\")\n    .classed(\"visible\", (d) => !d.children)\n    .attr(\"text-anchor\", \"middle\")\n    .attr(\"y\", (d) => (d.children ? -5 : 0))\n    .attr(\"opacity\", 0);\n\n  // ==== enterance transition ====\n  setTimeout(() => {\n    const growthTime = 600;\n    link\n      .attr(\"opacity\", 1)\n      .attr(\"stroke-dasharray\", (d) => linkLength(d) + \" \" + linkLength(d))\n      .attr(\"stroke-dashoffset\", (d) => linkLength(d))\n      .transition()\n      .delay((d) => d.source.depth * growthTime - 100)\n      .duration((d) => growthTime)\n      .ease(d3.easeLinear)\n      .attr(\"stroke-dashoffset\", 0)\n      .end()\n      .then(function (e) {\n        link.attr(\"stroke-dasharray\", \"none\");\n      });\n\n    svg\n      .selectAll(\"circle, image, text\")\n      .transition()\n      .delay((d) => d.depth * growthTime)\n      .duration(growthTime)\n      .attr(\"opacity\", 1);\n\n    // svg\n    //   .selectAll(\"image\")\n    //   .attr(\"opacity\", 1)\n    //   .attr(\"transform\")\n    //   .transition()\n    //   .delay((d) => d.depth * growthTime)\n    //   .duration(growthTime);\n  }, 1000);\n\n  node\n    .on(\"mouseover\", (e, d) => {\n      if (d.children) {\n        graphEl.classList.add(\"inactive\");\n        const { id } = d.data;\n        text.filter((d) => d.data.id === id).classed(\"visible\", true);\n\n        setSubtreeActive(d, true);\n\n        node.classed(\"active\", (d) => d.isActive);\n        text.classed(\"active\", (d) => d.isActive);\n        link.classed(\"active\", (d) => d.source.isActive);\n      }\n    })\n    .on(\"mouseout\", (e, d) => {\n      if (d.children) {\n        graphEl.classList.remove(\"inactive\");\n        const { id } = d.data;\n        text.filter((d) => d.data.id === id).classed(\"visible\", false);\n        setSubtreeActive(d, false);\n      }\n    })\n    .on(\"click\", (e, d) => {\n      parentComponent.handleClick(e, d);\n    });\n\n  simulation.on(\"tick\", (e) => {\n    node\n      .attr(\"transform\", (d) => `translate(${d.x},${d.y})`)\n      .select(\"image\")\n      .attr(\"transform\", (d) => {\n        let transform = \"\";\n        if (!d.children) {\n          const deltaX = d.x - d.parent.x;\n          const deltaY = d.y - d.parent.y;\n          const angle = radToDeg(Math.atan2(deltaY, deltaX)) + 90;\n          transform += ` rotate(${angle})`;\n        }\n        return transform;\n      });\n\n    text.attr(\"transform\", (d) => {\n      let xPos = d.x;\n      let yPos = d.y;\n      if (!d.children) {\n        const deltaX = d.x - d.parent.x;\n        const deltaY = d.y - d.parent.y;\n        const dir = normalize2D(deltaX, deltaY);\n        xPos += dir.x * imageSize * 0.5;\n        yPos += dir.y * imageSize * 0.5;\n      }\n\n      return `translate(${xPos},${yPos})`;\n    });\n\n    link\n      .attr(\"x1\", (d) => d.source.x)\n      .attr(\"y1\", (d) => d.source.y)\n      .attr(\"x2\", (d) => d.target.x)\n      .attr(\"y2\", (d) => d.target.y);\n  });\n\n  return svg.node();\n};\n\nexport default HerbTree;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport HerbTree from \"../../components/HerbTree/HerbTree\";\n// import WindowHeader from \"../../components/WindowHeader/WindowHeader\";\nimport \"./HomePage.scss\";\n\nclass HomePage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { redirect: null };\n  }\n\n  handleNodeClick = (node) => {\n    this.setState({ redirect: `/herb/${node.slug}` });\n  };\n\n  render() {\n    if (this.state.redirect) return <Redirect to={this.state.redirect} push />;\n\n    return (\n      <div className=\"HomePage\">\n        <div className=\"columns\">\n          <div className=\"ContentLeft\">\n            <HerbTree onNodeClick={this.handleNodeClick} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default HomePage;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport HomePage from \"./pages/HomePage/HomePage\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Router>\n        <Route path=\"/*\">\n          <HomePage />\n        </Route>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}