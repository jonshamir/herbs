{"version":3,"sources":["components/HerbTree/graphUtils.js","components/FadeInOut/FadeInOut.js","components/Button/Button.js","pages/HomePage/HomePage.js","pages/IntroPage/IntroPage.js","components/HerbSummary/HerbSummary.js","pages/HerbPage/HerbPage.js","components/HerbTree/HerbTree.js","components/Search/Search.js","App.js","reportWebVitals.js","index.js","utils/math.js"],"names":["svg","link","node","text","tooltip","tooltipContainer","protoPlant","simulation","rootNode","svgEl","containerEl","hoverTimer","FadeInOut","children","rest","motion","div","initial","opacity","animate","exit","Nav","className","HomePage","props","handleScroll","currScroll","document","body","scrollTop","documentElement","state","logoOpacity","setState","handleNodeClick","history","push","slug","window","addEventListener","this","scrollRestoration","removeEventListener","to","style","React","Component","withRouter","renderPage","page","setPage","onClick","backgroundImage","IntroPage","useState","AnimatePresence","exitBeforeEnter","HerbSummary","herb","family","altNames","id","src","alt","colSpan","name","commonName","lifeform","lifecycle","HerbPage","md","imageLoaded","a","match","params","fetch","response","e","setTimeout","herbInfo","filter","familyName","taxonomy","find","rank","hasOwnProperty","Familia","familyInfo","toLowerCase","onLoad","handleImageLoad","description","width","height","imageSize","mousePos","x","y","setupSimulation","nodes","links","d3","alphaDecay","alphaMin","force","d","distance","strength","forceManyBodyReuse","radius","alpha","forEach","fixed","dist","dist2D","invDist","Math","pow","clamp01","deltaX","deltaY","dir","normalize2D","getNodeLabel","data","drawTree","ref","current","append","attr","lower","selectAll","join","classed","on","collisionRadius","handleMouseMove","setupTooltip","tooltipRef","setupInteractions","parentComponent","raise","setSubtreeActive","isActive","source","nodeInfo","html","transition","duration","onHover","clearTimeout","handleClick","growTree","growthTime","callback","linkLength","delay","depth","ease","end","then","random","root","target","highlightDuration","currRotation","event","offsetY","restart","HerbTree","containerRef","createRef","d3ref","isHidden","isMinimal","isInteractive","initalLoaded","setGraphSize","taxonomyTreePruned","applyNodeOverrides","removeSingleChildren","JSON","parse","stringify","taxonomyTree","cx","cy","r","descendants","i","initialNodePositions","fx","fy","transform","parent","angle","radToDeg","atan2","xPos","yPos","label","length","initTree","scrollTo","scrollHeight","handleResize","onRouteChanged","onNodeClick","w","h","updateGraphSize","clientWidth","nodePositions","console","log","prevProps","location","prevLocation","route","pathname","routeParts","split","scaleImages","rotationNeeded","abs","unhighlightAll","getElementsByClassName","el","herbNode","baseVal","matrix","f","parentElement","highlightHerb","classNames","stop","taxonomyTreeOverrides","overrideNode","en","getMatchedName","query","allNames","unshift","enNames","matchIndex","concat","findIndex","prefix","reduce","containsPrefix","word","slice","matchName","getMatchIndex","getSuggestions","value","inputValue","trim","map","sort","h1","h2","getSuggestionValue","suggestion","renderSuggestion","suggestionText","matches","AutosuggestMatch","parts","AutosuggestParse","part","index","highlight","Search","isSuggestionHighlighted","suggestions","highlightedSuggestion","some","s","onChange","newValue","onSuggestionsFetchRequested","onSuggestionsClearRequested","onSuggestionSelected","goToResult","onSuggestionHighlighted","onKeyDown","key","inputProps","placeholder","App","useHistory","useLocation","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById","defined","require","EPSILON","Number","clamp","min","max","lerp","t","inverseLerp","toFinite","n","defaultValue","isFinite","expandVector","dims","TypeError","p","scalar","out","lerpArray","newArray","initialValue","mod","b","damp","lambda","dt","exp","len2D","sqrt","module","exports","fract","floor","sign","degToRad","PI","pingPong","linspace","opts","endpoint","offset","_","lerpFrames","values","len","whole","frame","nextFrame","Array","isArray","v","smoothstep","dampArray","mapRange","inputMin","inputMax","outputMin","outputMax","outVal","expand2D","expand3D","expand4D","v1","v2"],"mappings":"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","file":"static/js/main.e6fadf5a.chunk.js","sourcesContent":["import * as d3 from \"d3\";\nimport { forceManyBodyReuse } from \"d3-force-reuse\";\nimport { radToDeg, normalize2D, dist2D, clamp01 } from \"../../utils/math\";\n\nimport herbInfo from \"../../data/herbInfo.json\";\nimport familyInfo from \"../../data/familyInfo.json\";\nimport initialNodePositions from \"../../data/initialNodePositions.json\";\n\nimport lang from \"../../lang\";\n\nlet width = 400;\nlet height = 400;\n// const marginX = 15;\nconst marginY = 30;\nconst offsetX = 0;\nconst imageSize = 40;\nconst collisionRadius = 16;\n\n// Global variables\nlet svg, link, node, text;\nlet tooltip, tooltipContainer;\nlet protoPlant;\nlet simulation;\nlet rootNode;\nlet svgEl;\nlet containerEl;\nlet mousePos = { x: -1, y: -1 };\n\nconst getCirclePath = (cx, cy, r) =>\n  `M ${cx - r}, ${cy}\n   a ${r},${r} 0 1,0 ${r * 2},0\n   a ${r},${r} 0 1,0 -${r * 2},0`;\n\nexport const initTree = (ref, tooltipRef, data, parentComponent) => {\n  rootNode = d3.hierarchy(data);\n  const links = rootNode.links();\n  const nodes = rootNode.descendants();\n  nodes.forEach((node, i) => {\n    const { id } = node.data;\n    if (id !== 1000 && initialNodePositions[id]) {\n      const { x, y } = initialNodePositions[id];\n      node.x = x;\n      node.y = y;\n    }\n  });\n\n  rootNode.fixed = true;\n  rootNode.fx = offsetX;\n  rootNode.fy = 0.5 * height - 1 * marginY;\n\n  setupSimulation(nodes, links);\n  drawTree(ref, simulation, nodes, links);\n  setupTooltip(tooltipRef);\n  setupInteractions(parentComponent);\n\n  protoPlant = svg.append(\"g\").classed(\"protoPlant\", true);\n  for (let i = 1; i <= 4; i++) {\n    protoPlant\n      .append(\"path\")\n      .attr(\"d\", getCirclePath(0, 0, 16))\n      .attr(\"id\", `Circle${i}`);\n  }\n\n  svgEl = svg.node();\n\n  simulation.on(\"tick\", (e) => {\n    node.attr(\"transform\", (d) => {\n      let transform = `translate(${d.x},${d.y})`;\n      if (!d.children) {\n        const deltaX = d.x - d.parent.x;\n        const deltaY = d.y - d.parent.y;\n        const angle = radToDeg(Math.atan2(deltaY, deltaX)) + 90;\n        transform += ` rotate(${angle})`;\n      }\n      return transform;\n    });\n\n    text.attr(\"transform\", (d) => {\n      let xPos = d.x;\n      let yPos = d.y;\n      if (!d.children) {\n        // Leaf nodes\n        const label = getNodeLabel(d);\n        const deltaX = d.x - d.parent.x;\n        const deltaY = d.y - d.parent.y;\n        const dir = normalize2D(deltaX, deltaY);\n        xPos += dir.x * (imageSize * 0.5 + label.length * 1.5);\n        yPos += dir.y * imageSize * 0.5;\n      }\n\n      return `translate(${xPos},${yPos})`;\n    });\n\n    link\n      .attr(\"x1\", (d) => d.source.x)\n      .attr(\"y1\", (d) => d.source.y)\n      .attr(\"x2\", (d) => d.target.x)\n      .attr(\"y2\", (d) => d.target.y);\n  });\n\n  return simulation;\n};\n\nexport const setupSimulation = (nodes, links) => {\n  simulation = d3\n    .forceSimulation(nodes)\n    .alphaDecay(0.05)\n    .alphaMin(0.01)\n    .force(\n      \"link\",\n      d3\n        .forceLink(links)\n        .id((d) => d.id)\n        .distance(40)\n        .strength(0.5)\n    )\n    .force(\"charge\", forceManyBodyReuse().strength(-80))\n    .force(\n      \"collision\",\n      d3.forceCollide().radius((d) => (d.children ? 2 : collisionRadius))\n    )\n    .force(\"x\", d3.forceX(offsetX))\n    .force(\"y\", d3.forceY())\n    .force(\"mouse\", (alpha) => {\n      nodes.forEach((d) => {\n        if (mousePos.x !== -1 && !d.fixed) {\n          const dist = dist2D(d, mousePos);\n          if (dist < 25) {\n            // Snap to cursor\n          } else if (dist < 250) {\n            const invDist = Math.pow(clamp01(1 - (6 * dist) / height), 2);\n            const deltaX = d.x - mousePos.x;\n            const deltaY = d.y - mousePos.y;\n            const dir = normalize2D(deltaX, deltaY);\n            d.x += dir.x * invDist * 12 * alpha;\n            d.y += dir.y * invDist * 12 * alpha;\n          }\n        }\n      });\n    });\n  /*\n    .force(\"growth\", (alpha) => {\n      const multiplier = Math.pow(alpha, 1);\n\n      nodes.forEach((node) => {\n        // Cause nodes to be above their parents\n        if (node.parent && node.y > node.parent.y - 1000) {\n          node.y -= multiplier * 6;\n        }\n      });\n    })\n    .force(\"bounding\", (alpha) => {\n      nodes.forEach((node) => {\n        const wallRepulsionX =\n          alpha *\n          Math.max(1, Math.abs(node.x + offsetX) - (width / 2 - marginX));\n        node.x -= Math.sign(node.x) * wallRepulsionX;\n        // const wallRepulsionY =\n        //   alpha * Math.max(1, Math.abs(node.y) - (height / 2 - marginY));\n        // node.y -= Math.sign(node.y) * wallRepulsionY;\n      });\n    });*/\n};\n\nconst getNodeLabel = (d) => {\n  if (d.children) return `${d.data.name}`;\n  else return herbInfo[d.data.id].commonName[lang];\n};\n\nexport const drawTree = (ref, simulation, nodes, links) => {\n  containerEl = ref.current;\n\n  svg = d3\n    .select(containerEl)\n    .append(\"svg\")\n    .attr(\"viewBox\", [-width / 2, -height / 2, width, height])\n    .lower();\n\n  link = svg\n    .append(\"g\")\n    .selectAll(\"line\")\n    .data(links)\n    .join(\"line\")\n    .attr(\"class\", \"link\")\n    .attr(\"opacity\", 0);\n\n  node = svg\n    .append(\"g\")\n    .selectAll(\"g\")\n    .data(nodes)\n    .join(\"g\")\n    .attr(\"class\", (d) => `node node-${d.data.slug}`)\n    .classed(\"internode\", (d) => d.children)\n    .classed(\"family\", (d) => d.data.slug in familyInfo)\n    .classed(\"leaf\", (d) => !d.children)\n    .attr(\"id\", (d) => d.data.id);\n\n  // Internode\n  node\n    .filter((d) => d.children)\n    .append(\"circle\")\n    .attr(\"r\", (d) => (d.data.slug in familyInfo ? 2 : 1.5))\n    .attr(\"opacity\", 0);\n\n  // Internode click areas\n  node\n    .filter((d) => d.children)\n    .append(\"circle\")\n    .attr(\"r\", 18)\n    .attr(\"fill-opacity\", 0)\n    .attr(\"stroke-width\", 0);\n\n  // Leaf images\n  node\n    .filter((d) => !d.children)\n    .append(\"svg:image\")\n    .attr(\"xlink:href\", (d) => `/images/icons/${d.data.slug}.png`)\n    .attr(\"class\", (d) => `image-${d.data.slug}`)\n    .on(\"error\", function (d) {\n      d3.select(this).attr(\"xlink:href\", \"/images/herb.png\");\n    })\n    .attr(\"x\", -imageSize / 2)\n    .attr(\"y\", -imageSize / 2)\n    .attr(\"width\", imageSize)\n    .attr(\"height\", imageSize)\n    .attr(\"transform\", \"scale(0.01)\");\n\n  // Leaf circle overlays\n  node\n    .filter((d) => !d.children)\n    .append(\"circle\")\n    .attr(\"r\", collisionRadius + 4);\n\n  // Mouse hover effect\n  svg.on(\"mousemove\", handleMouseMove);\n\n  // Leaf text\n  text = svg\n    .append(\"g\")\n    .attr(\"class\", \"textGroup\")\n    .selectAll(\"g\")\n    .data(nodes)\n    .join(\"g\")\n    .append(\"text\")\n    .text(getNodeLabel)\n    .attr(\"class\", \"nodeText\")\n    .classed(\"visible\", (d) => !d.children)\n    .attr(\"text-anchor\", \"middle\")\n    .attr(\"y\", (d) => (d.children ? -5 : 0))\n    .attr(\"opacity\", 0);\n  return { svg, link, node, text };\n};\n\nexport const setupTooltip = (tooltipRef) => {\n  tooltipContainer = d3.select(tooltipRef.current);\n\n  tooltip = tooltipContainer\n    .append(\"div\")\n    .attr(\"class\", \"tooltip\")\n    .style(\"opacity\", 0);\n};\n\nconst onHover = (d, svg, link, node, text, tooltip, tooltipContainer) => {\n  const { slug, name, rank } = d.data;\n\n  if (d.children) {\n    // console.log(d3.select(`.node-${slug}`));\n    d3.select(`.node-${slug}`).raise();\n    svg.classed(\"inactive\", true);\n    // text.filter((d) => d.data.id === id).classed(\"visible\", true);\n\n    setSubtreeActive(d, true);\n\n    node.classed(\"active\", (d) => d.isActive);\n    text.classed(\"active\", (d) => d.isActive);\n    link.classed(\"active\", (d) => d.source.isActive);\n\n    const nodeInfo = familyInfo[slug];\n\n    if (nodeInfo) {\n      tooltip.html(\n        `<h4>${nodeInfo.name[lang]} /<span> ${rank[lang]}</span></h4><p>${nodeInfo.description[lang]}</p>`\n      );\n    } else {\n      tooltip.html(`<h4>${name} /<span> ${rank[lang]}</span></h4>`);\n    }\n    tooltipContainer.attr(\n      \"style\",\n      `transform: translate(${2 * d.x}px,${2 * d.y}px)`\n    );\n    tooltip.transition().duration(300).style(\"opacity\", 1);\n  } else {\n    // d3.select(`.image-${slug}`).attr(\"transform\", `scale(1.1)`);\n  }\n};\n\nlet hoverTimer;\n\nexport const setupInteractions = (parentComponent) => {\n  node\n    .on(\"mouseover\", (e, d) => {\n      hoverTimer = setTimeout(() => {\n        onHover(d, svg, link, node, text, tooltip, tooltipContainer);\n      }, 300);\n    })\n    .on(\"mouseout\", (e, d) => {\n      clearTimeout(hoverTimer);\n      if (d.children) {\n        svg.classed(\"inactive\", false);\n        setSubtreeActive(d, false);\n\n        const { id } = d.data;\n        text.filter((d) => d.data.id === id).classed(\"visible\", false);\n\n        tooltip.transition().duration(200).style(\"opacity\", 0);\n      }\n    })\n    .on(\"click\", (e, d) => {\n      parentComponent.handleClick(e, d);\n    });\n};\n\nexport const growTree = (growthTime = 400, callback = () => {}) => {\n  link\n    .attr(\"opacity\", 1)\n    .attr(\"stroke-dasharray\", (d) => linkLength(d) + \" \" + linkLength(d))\n    .attr(\"stroke-dashoffset\", (d) => linkLength(d))\n    .transition()\n    .delay((d) => d.source.depth * growthTime - 100)\n    .duration((d) => growthTime)\n    .ease(d3.easeLinear)\n    .attr(\"stroke-dashoffset\", 0)\n    .end()\n    .then(function (e) {\n      link.attr(\"stroke-dasharray\", \"none\");\n    });\n\n  svg\n    .selectAll(\"circle, text\")\n    .transition()\n    .delay((d) => d.depth * growthTime + 500)\n    .duration(growthTime)\n    .attr(\"opacity\", 1)\n    .end()\n    .then(callback);\n\n  svg\n    .selectAll(\"image\")\n    // .attr(\"opacity\", 1)\n    .transition()\n    .delay((d) => d.depth * growthTime + 600 * Math.random() - 300)\n    .duration(growthTime)\n    .attr(\"transform\", \"scale(1)\");\n};\n\nconst setSubtreeActive = (root, isActive) => {\n  root.isActive = isActive;\n  root.children && root.children.forEach((d) => setSubtreeActive(d, isActive));\n};\n\nconst linkLength = (link) => {\n  return dist2D(link.source, link.target) + 3;\n};\n\nexport const updateGraphSize = (w, h) => {\n  width = w / 2;\n  height = h;\n  d3.select(svgEl).attr(\"viewBox\", [-width / 2, -height / 2, width, height]);\n  if (simulation) {\n    simulation.alpha(0.2).restart();\n\n    rootNode.fx = offsetX;\n    rootNode.fy = 0.5 * height - 1 * marginY;\n  }\n};\n\nconst highlightDuration = 600;\nlet currRotation = 0;\n\nexport const highlightHerb = (slug) => {\n  svg\n    .selectAll(\"image\")\n    .transition()\n    .duration(highlightDuration / 2)\n    .attr(\"transform\", (d) =>\n      d.data.slug === slug ? \"scale(2)\" : \"scale(0.01)\"\n    );\n\n  for (let el of document.getElementsByClassName(\"highlighted\")) {\n    d3.select(el).classed(\"highlighted\", false);\n  }\n  const herbNode = document.getElementsByClassName(`node-${slug}`)[0];\n  d3.select(herbNode).classed(\"highlighted\", true);\n  currRotation = -herbNode.transform.baseVal[1].angle;\n  const x = -2 * herbNode.transform.baseVal[0].matrix.e;\n  const y = -2 * herbNode.transform.baseVal[0].matrix.f;\n\n  const rotationNeeded = Math.abs(currRotation) / 360;\n  const scrollTop = containerEl.parentElement.scrollTop;\n\n  d3.select(containerEl).attr(\n    \"style\",\n    `transform: translate(${550}px,${-550 + scrollTop}px)`\n  );\n\n  svg\n    .transition()\n    .duration(highlightDuration * (1 + rotationNeeded))\n    .attr(\"transform\", `rotate(${currRotation}) translate(${x} ${y})`);\n};\n\nexport const unhighlightAll = (scaleImages) => {\n  if (scaleImages) {\n    svg\n      .selectAll(\"image\")\n      .transition()\n      .duration(highlightDuration)\n      .attr(\"transform\", \"scale(1)\");\n  }\n\n  d3.select(containerEl).attr(\"style\", \"\");\n  const rotationNeeded = Math.abs(currRotation) / 360;\n  currRotation = 0;\n  svg\n    .transition()\n    .duration(highlightDuration * (1 + rotationNeeded))\n    .attr(\"transform\", \"\");\n};\n\nfunction handleMouseMove(event) {\n  const { x, offsetY } = event;\n  mousePos = {\n    x: (x - width) / 2,\n    y: (offsetY - height) / 2,\n  };\n  simulation.alpha(0.2).restart();\n}\n","import React from \"react\";\nimport { motion } from \"framer-motion\";\n\nconst FadeInOut = ({ children, ...rest }) => {\n  return (\n    <motion.div\n      {...rest}\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      exit={{ opacity: 0 }}\n    >\n      {children}\n    </motion.div>\n  );\n};\n\nexport default FadeInOut;\n","import React from \"react\";\n\nimport \"./Button.scss\";\n\nconst Nav = ({ children, ...rest }) => {\n  return (\n    <button {...rest} className=\"Button\">\n      {children}\n    </button>\n  );\n};\n\nexport default Nav;\n","import React from \"react\";\nimport { withRouter, Link } from \"react-router-dom\";\n\nimport FadeInOut from \"../../components/FadeInOut/FadeInOut\";\nimport Button from \"../../components/Button/Button\";\n\nimport \"./HomePage.scss\";\n\nclass HomePage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { logoOpacity: 1 };\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"scroll\", this.handleScroll);\n    if (window.history.scrollRestoration) {\n      window.history.scrollRestoration = \"manual\";\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"scroll\", this.handleScroll);\n  }\n\n  handleScroll = () => {\n    const currScroll =\n      document.body.scrollTop || document.documentElement.scrollTop;\n\n    const opacityThreshold = 100;\n\n    if (currScroll > opacityThreshold) {\n      if (this.state.logoOpacity !== 0) this.setState({ logoOpacity: 0 });\n    } else {\n      this.setState({ logoOpacity: 1 - currScroll / opacityThreshold });\n    }\n  };\n\n  handleNodeClick = (node) => {\n    this.props.history.push(`/herb/${node.slug}`);\n  };\n\n  render() {\n    const { logoOpacity } = this.state;\n    return (\n      <FadeInOut className=\"HomePage\">\n        {/*<HerbTree onNodeClick={this.handleNodeClick} />*/}\n        <Link to=\"/intro\" className=\"Help\">\n          <Button>מה זה?</Button>\n        </Link>\n        <h1 className=\"Logo\" style={{ opacity: logoOpacity + 0.15 }}>\n          על טעם וריח\n        </h1>\n      </FadeInOut>\n    );\n  }\n}\n\nexport default withRouter(HomePage);\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { AnimatePresence } from \"framer-motion\";\n\nimport Button from \"../../components/Button/Button\";\nimport FadeInOut from \"../../components/FadeInOut/FadeInOut\";\n\nimport \"./IntroPage.scss\";\n\nconst IntroPage = (props) => {\n  const [page, setPage] = useState(0);\n\n  return (\n    <FadeInOut className=\"IntroPage\">\n      <AnimatePresence exitBeforeEnter>\n        {renderPage(page, setPage)}\n      </AnimatePresence>\n      <Link to=\"/\" className=\"Skip\">\n        <Button>דלג ></Button>\n      </Link>\n    </FadeInOut>\n  );\n};\n\nconst renderPage = (page, setPage) => {\n  switch (page) {\n    case 0:\n      return (\n        <FadeInOut className=\"page P0\" key=\"P0\">\n          <h1>על טעם וריח</h1>\n          <h2>מדריך לעשבי תיבול במטבח</h2>\n          <Button onClick={() => setPage(1)}>מה הקטע?</Button>\n        </FadeInOut>\n      );\n    case 1:\n      return (\n        <FadeInOut className=\"page P1\" key=\"P1\">\n          <div className=\"ProtoPlant\"></div>\n          <p>כל הצמחים בעולם התפתחו מאב קדמון אחד.</p>\n          <Button onClick={() => setPage(2)}>אוקיי</Button>\n        </FadeInOut>\n      );\n    case 2:\n      return (\n        <FadeInOut\n          className=\"page P2\"\n          key=\"P2\"\n          style={{\n            backgroundImage: \"url('/images/tree-bg-big.jpg')\",\n          }}\n        >\n          <p>לאורך עידנים הצמחים השתנו, התפצלו והתפתחו לאינספור זנים שונים.</p>\n          <Button onClick={() => setPage(3)}>סבבה</Button>\n        </FadeInOut>\n      );\n    case 3:\n      return (\n        <FadeInOut\n          className=\"page P3\"\n          key=\"P3\"\n          style={{\n            backgroundImage: \"url('/images/tree-bg-small.jpg')\",\n          }}\n        >\n          <p>\n            האתר שלפניכם נותן הצצה לעץ החיים הענק הזה, דרך צמחי התבלין.\n            <br />\n            בנוסף תוכלו למצוא הסברים, מתכונים, ושימושים לצמחים השונים.\n          </p>\n          <Link to=\"/\">\n            <Button>יאללה!</Button>\n          </Link>\n        </FadeInOut>\n      );\n    default:\n      return \"\";\n  }\n};\n\nexport default IntroPage;\n","import React from \"react\";\nimport lang from \"../../lang\";\nimport \"./HerbSummary.scss\";\n\nconst HerbSummary = (props) => {\n  const { slug, herb, family } = props;\n  const altNames = herb.altNames[lang];\n\n  return (\n    <div className=\"HerbSummary\">\n      <img\n        className=\"HerbIcon\"\n        id=\"herb-icon\"\n        src={`/images/icons/${slug}.png`}\n        alt={slug}\n      />\n      <table className=\"InfoTable\">\n        <tbody>\n          <tr>\n            <td colSpan=\"2\" className=\"scientificName\">\n              {herb.name}\n            </td>\n          </tr>\n          <tr>\n            <th>באנגלית</th>\n            <td>{herb.commonName[\"en\"]}</td>\n          </tr>\n          {altNames ? (\n            <tr>\n              <th>שמות נוספים</th>\n              <td>{altNames}</td>\n            </tr>\n          ) : null}\n          <tr>\n            <th>משפחה</th>\n            <td>{family.name[lang]}</td>\n          </tr>\n          <tr>\n            <th>צורת חיים</th>\n            <td>\n              {herb.lifeform[lang]} {herb.lifecycle[lang]}\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default HerbSummary;\n","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport { withRouter } from \"react-router-dom\";\nimport lang from \"../../lang\";\n\nimport FadeInOut from \"../../components/FadeInOut/FadeInOut\";\nimport HerbSummary from \"../../components/HerbSummary/HerbSummary\";\nimport herbInfo from \"../../data/herbInfo.json\";\nimport familyInfo from \"../../data/familyInfo.json\";\n\nimport \"./HerbPage.scss\";\n\nclass HerbPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { md: \"loading...\", imageLoaded: false };\n  }\n\n  async componentDidMount() {\n    const { slug } = this.props.match.params;\n    // const slug = \"bay-leaf\";\n    const response = await fetch(`/herb-pages/${slug}.md`);\n    const text = await response.text();\n\n    this.setState({\n      md: text,\n    });\n  }\n\n  handleImageLoad(e) {\n    setTimeout(() => this.setState({ imageLoaded: true }), 1000);\n  }\n\n  render() {\n    const { slug } = this.props.match.params;\n    const { imageLoaded } = this.state;\n    // const slug = \"bay-leaf\";\n    const herb = herbInfo.filter((herb) => herb.slug === slug)[0];\n    const familyName = herb.taxonomy.find((rank) =>\n      rank.hasOwnProperty(\"Familia\")\n    ).Familia;\n    const family = familyInfo[familyName.toLowerCase()];\n\n    return (\n      <FadeInOut className=\"HerbPage\">\n        <main>\n          <HerbSummary herb={herb} slug={slug} family={family} />\n          <div className=\"HerbContent\">\n            <div className=\"herbPhoto\">\n              <img\n                src={`/images/photos/${slug}.jpg`}\n                alt={herb.commonName[lang]}\n                className={imageLoaded ? \"loaded\" : \"\"}\n                onLoad={(e) => this.handleImageLoad(e)}\n              />\n            </div>\n            <h1>{herb.commonName[lang]}</h1>\n            <ReactMarkdown>{this.state.md}</ReactMarkdown>\n            <h2>משפחת ה{family.name[lang]}</h2>\n            <p>{family.description[lang]}</p>\n          </div>\n        </main>\n      </FadeInOut>\n    );\n  }\n}\n\nexport default withRouter(HerbPage);\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport taxonomyTree from \"../../data/taxonomyTree.json\";\nimport taxonomyTreeOverrides from \"../../data/taxonomyTreeOverrides.json\";\nimport {\n  initTree,\n  updateGraphSize,\n  highlightHerb,\n  unhighlightAll,\n  growTree,\n} from \"./graphUtils\";\nimport \"./HerbTree.scss\";\n\nclass HerbTree extends React.Component {\n  constructor(props) {\n    super(props);\n    this.containerRef = React.createRef();\n    this.d3ref = React.createRef();\n    this.tooltipRef = React.createRef();\n\n    this.state = {\n      isHidden: true,\n      isMinimal: false,\n      isInteractive: false,\n      initalLoaded: false,\n    };\n  }\n\n  componentDidMount() {\n    this.setGraphSize();\n\n    const taxonomyTreePruned = applyNodeOverrides(\n      removeSingleChildren(JSON.parse(JSON.stringify(taxonomyTree)))\n    );\n    this.simulation = initTree(\n      this.d3ref,\n      this.tooltipRef,\n      taxonomyTreePruned,\n      this\n    );\n\n    this.containerRef.current.scrollTo(0, this.d3ref.current.scrollHeight);\n    window.addEventListener(\"resize\", (e) => this.handleResize(e));\n    setTimeout(() => this.onRouteChanged(), 200);\n  }\n\n  handleResize(e) {\n    this.setGraphSize();\n  }\n\n  handleClick(event, node) {\n    if (node.height === 0) {\n      this.props.onNodeClick(node.data);\n    }\n  }\n\n  setGraphSize() {\n    const w = document.documentElement.clientWidth;\n    // const h = document.documentElement.clientHeight;\n    updateGraphSize(w, 710);\n  }\n\n  logPositions() {\n    const nodePositions = {};\n    this.simulation.nodes().forEach((node, i) => {\n      nodePositions[node.data.id] = { x: node.x, y: node.y };\n    });\n    console.log(JSON.stringify(nodePositions));\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.location !== prevProps.location) {\n      this.onRouteChanged(prevProps.location);\n    }\n  }\n\n  onRouteChanged(prevLocation) {\n    const route = this.props.location.pathname;\n    const routeParts = route.split(\"/\");\n    if (route === \"/\") {\n      this.setState({ isMinimal: false, isHidden: false });\n      this.setState({ isInteractive: this.state.initalLoaded });\n      unhighlightAll(this.state.initalLoaded);\n\n      if (!this.state.initalLoaded) {\n        this.setState({ initalLoaded: true });\n        growTree(400, () => {\n          this.setState({ isInteractive: true });\n        });\n      }\n    } else {\n      this.setState({ isInteractive: false });\n      // this.containerRef.current.scrollTo({\n      //   top: 0,\n      //   left: 0,\n      //   behavior: \"smooth\",\n      // });\n      if (routeParts[1] === \"herb\") {\n        this.setState({\n          isMinimal: true,\n          isHidden: false,\n        });\n        growTree(0);\n        const herbSlug = routeParts[2];\n        highlightHerb(herbSlug);\n      } else if (routeParts[1] === \"intro\") {\n        this.setState({\n          isMinimal: false,\n          isHidden: true,\n        });\n      }\n    }\n  }\n\n  render() {\n    const { isMinimal, isHidden, isInteractive } = this.state;\n    let classNames = \"HerbTree\";\n    if (isMinimal) classNames += \" minimal\";\n    if (isHidden) classNames += \" hidden\";\n    if (isInteractive) classNames += \" interactive\";\n    if ((isMinimal || isHidden) && this.simulation) this.simulation.stop();\n\n    return (\n      <div className={classNames} ref={this.containerRef}>\n        {/*<button onClick={() => this.logPositions()}>Get positions</button>*/}\n        <div className=\"treeContainer\" ref={this.d3ref}>\n          <div className=\"tooltipContainer\" ref={this.tooltipRef}></div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst applyNodeOverrides = (node) => {\n  if (node.children) node.children.forEach(applyNodeOverrides);\n\n  // applyNodeOverrides\n  if (node.slug in taxonomyTreeOverrides) {\n    const overrideNode = taxonomyTreeOverrides[node.slug];\n    node.name = overrideNode.name;\n    node.rank = overrideNode.rank;\n    node.slug = overrideNode.slug;\n  }\n  return node;\n};\n\nconst removeSingleChildren = (node) => {\n  if (node.children) node.children.forEach(removeSingleChildren);\n  if (\n    node.children &&\n    node.children.length === 1 &&\n    node.rank.en !== \"Cladus\"\n  ) {\n    const { id, children, name, rank, slug } = node.children[0];\n    node.id = id;\n    node.children = children;\n    node.name = name;\n    node.rank = rank;\n    node.slug = slug;\n  }\n  return node;\n};\n\nexport default withRouter(HerbTree);\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport Autosuggest from \"react-autosuggest\";\nimport lang from \"../../lang\";\n\nimport AutosuggestMatch from \"autosuggest-highlight/match\";\nimport AutosuggestParse from \"autosuggest-highlight/parse\";\n\nimport herbInfo from \"../../data/herbInfo.json\";\n\nimport \"./Search.scss\";\n\nconst doesContainPrefix = (str, prefix) => {\n  return str\n    .split(\" \")\n    .reduce(\n      (containsPrefix, word) =>\n        containsPrefix || word.slice(0, prefix.length) === prefix,\n      false\n    );\n};\n\nconst getMatchedName = (herb, query) => {\n  let allNames = herb.altNames[lang].split(\",\");\n  allNames.unshift(herb.commonName[lang]);\n  let enNames = herb.altNames.en.toLowerCase().split(\",\");\n  enNames.unshift(herb.commonName.en.toLowerCase());\n  enNames.push(herb.name.toLowerCase());\n  allNames = allNames.concat(enNames);\n\n  const matchIndex = allNames.findIndex((name) =>\n    doesContainPrefix(name, query)\n  );\n  const matchName = matchIndex > -1 ? allNames[matchIndex] : \"\";\n  return { matchName, matchIndex };\n};\n\nconst getMatchIndex = (herb, query) => {\n  return getMatchedName(herb, query).matchIndex;\n};\n\n// How to calculate suggestions for any given input value.\nconst getSuggestions = (value) => {\n  const inputValue = value.trim().toLowerCase();\n  const inputLength = inputValue.length;\n\n  if (inputLength <= 1) return [];\n\n  // Sort results by index of match\n  const matchedHerbs = herbInfo\n    .map((herb, i) => ({\n      herb,\n      matchIndex: getMatchIndex(herb, inputValue),\n    }))\n    .filter((herb) => herb.matchIndex > -1)\n    .sort((h1, h2) => h1.matchIndex - h2.matchIndex);\n\n  return matchedHerbs.map((herb) => herb.herb);\n};\n\n// When suggestion is clicked, Autosuggest needs to populate the input\n// based on the clicked suggestion. Teach Autosuggest how to calculate the\n// input value for every given suggestion.\nconst getSuggestionValue = (suggestion) => suggestion.commonName[lang];\n\n// Use your imagination to render suggestions.\nconst renderSuggestion = (suggestion, { query }) => {\n  query = query.toLowerCase();\n  const commonName = suggestion.commonName[lang];\n  const suggestionText = getMatchedName(suggestion, query).matchName;\n\n  const matches = AutosuggestMatch(suggestionText, query);\n  const parts = AutosuggestParse(suggestionText, matches);\n\n  return (\n    <div>\n      <span className=\"name\">\n        {parts.map((part, index) => {\n          const className = part.highlight ? \"highlight\" : \"\";\n\n          return (\n            <span className={className} key={index}>\n              {part.text}\n            </span>\n          );\n        })}\n        {suggestionText !== commonName && ` (${commonName})`}\n      </span>\n    </div>\n  );\n};\n\nclass Search extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      value: \"\",\n      suggestions: [],\n      highlightedSuggestion: \"\",\n    };\n  }\n\n  isSuggestionHighlighted = () => {\n    const { suggestions, highlightedSuggestion } = this.state;\n    return suggestions.some((s) => s === highlightedSuggestion);\n  };\n\n  onChange = (event, { newValue }) => {\n    this.setState({\n      value: newValue,\n    });\n  };\n\n  // Autosuggest will call this function every time you need to update suggestions.\n  onSuggestionsFetchRequested = ({ value }) => {\n    this.setState({\n      suggestions: getSuggestions(value),\n    });\n  };\n\n  // Autosuggest will call this function every time you need to clear suggestions.\n  onSuggestionsClearRequested = () => {\n    this.setState({\n      suggestions: [],\n      highlightedSuggestion: \"\",\n    });\n  };\n\n  onSuggestionSelected = (e, { suggestion }) => {\n    this.goToResult(suggestion);\n  };\n\n  onSuggestionHighlighted = ({ suggestion }) => {\n    this.setState({ highlightedSuggestion: suggestion });\n  };\n\n  goToResult = (suggestion) => {\n    this.setState({\n      value: \"\",\n      suggestions: [],\n      highlightedSuggestion: \"\",\n    });\n    this.props.history.push(`/herb/${suggestion.slug}`);\n  };\n\n  onKeyDown = (e) => {\n    if (e.key === \"Enter\") {\n      const { suggestions } = this.state;\n      if (!this.isSuggestionHighlighted() && suggestions.length > 0) {\n        this.goToResult(suggestions[0]);\n      }\n    }\n  };\n\n  render() {\n    const { value, suggestions } = this.state;\n\n    // Autosuggest will pass through all these props to the input.\n    const inputProps = {\n      placeholder: \"חיפוש\",\n      value,\n      onChange: this.onChange,\n      onKeyDown: this.onKeyDown,\n    };\n\n    return (\n      <div className=\"Search\">\n        <img src=\"/images/ui/search.svg\" alt=\"Search\" className=\"searchIcon\" />\n        <Autosuggest\n          suggestions={suggestions}\n          onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n          onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n          onSuggestionSelected={this.onSuggestionSelected}\n          onSuggestionHighlighted={this.onSuggestionHighlighted}\n          getSuggestionValue={getSuggestionValue}\n          renderSuggestion={renderSuggestion}\n          inputProps={inputProps}\n        />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Search);\n","import React from \"react\";\nimport { AnimatePresence } from \"framer-motion\";\nimport { Route, Switch, useLocation, useHistory } from \"react-router-dom\";\nimport HomePage from \"./pages/HomePage/HomePage\";\nimport IntroPage from \"./pages/IntroPage/IntroPage\";\nimport HerbPage from \"./pages/HerbPage/HerbPage\";\nimport HerbTree from \"./components/HerbTree/HerbTree\";\nimport Search from \"./components/Search/Search\";\n\nconst App = () => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const handleNodeClick = (node) => {\n    history.push(`/herb/${node.slug}`);\n  };\n\n  return (\n    <div>\n      <Search />\n      <HerbTree onNodeClick={handleNodeClick} />\n      <AnimatePresence exitBeforeEnter>\n        <Switch location={location} key={location.pathname}>\n          <Route exact path=\"/\">\n            <HomePage />\n          </Route>\n          <Route exact path=\"/intro\">\n            <IntroPage />\n          </Route>\n          <Route path=\"/herb/:slug\">\n            <HerbPage />\n          </Route>\n        </Switch>\n      </AnimatePresence>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  // <React.StrictMode>\n  <Router>\n    <App />\n  </Router>,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","var defined = require(\"defined\");\nvar EPSILON = Number.EPSILON;\n\nfunction clamp(value, min, max) {\n  return min < max\n    ? value < min\n      ? min\n      : value > max\n      ? max\n      : value\n    : value < max\n    ? max\n    : value > min\n    ? min\n    : value;\n}\n\nfunction clamp01(v) {\n  return clamp(v, 0, 1);\n}\n\nfunction lerp(min, max, t) {\n  return min * (1 - t) + max * t;\n}\n\nfunction inverseLerp(min, max, t) {\n  if (Math.abs(min - max) < EPSILON) return 0;\n  else return (t - min) / (max - min);\n}\n\nfunction smoothstep(min, max, t) {\n  var x = clamp(inverseLerp(min, max, t), 0, 1);\n  return x * x * (3 - 2 * x);\n}\n\nfunction toFinite(n, defaultValue) {\n  defaultValue = defined(defaultValue, 0);\n  return typeof n === \"number\" && isFinite(n) ? n : defaultValue;\n}\n\nfunction expandVector(dims) {\n  if (typeof dims !== \"number\") throw new TypeError(\"Expected dims argument\");\n  return function (p, defaultValue) {\n    defaultValue = defined(defaultValue, 0);\n    var scalar;\n    if (p == null) {\n      // No vector, create a default one\n      scalar = defaultValue;\n    } else if (typeof p === \"number\" && isFinite(p)) {\n      // Expand single channel to multiple vector\n      scalar = p;\n    }\n\n    var out = [];\n    var i;\n    if (scalar == null) {\n      for (i = 0; i < dims; i++) {\n        out[i] = toFinite(p[i], defaultValue);\n      }\n    } else {\n      for (i = 0; i < dims; i++) {\n        out[i] = scalar;\n      }\n    }\n    return out;\n  };\n}\n\nfunction lerpArray(min, max, t, out) {\n  out = out || [];\n  if (min.length !== max.length) {\n    throw new TypeError(\n      \"min and max array are expected to have the same length\"\n    );\n  }\n  for (var i = 0; i < min.length; i++) {\n    out[i] = lerp(min[i], max[i], t);\n  }\n  return out;\n}\n\nfunction newArray(n, initialValue) {\n  n = defined(n, 0);\n  if (typeof n !== \"number\")\n    throw new TypeError(\"Expected n argument to be a number\");\n  var out = [];\n  for (var i = 0; i < n; i++) out.push(initialValue);\n  return out;\n}\n\nfunction linspace(n, opts) {\n  n = defined(n, 0);\n  if (typeof n !== \"number\")\n    throw new TypeError(\"Expected n argument to be a number\");\n  opts = opts || {};\n  if (typeof opts === \"boolean\") {\n    opts = { endpoint: true };\n  }\n  var offset = defined(opts.offset, 0);\n  if (opts.endpoint) {\n    return newArray(n).map(function (_, i) {\n      return n <= 1 ? 0 : (i + offset) / (n - 1);\n    });\n  } else {\n    return newArray(n).map(function (_, i) {\n      return (i + offset) / n;\n    });\n  }\n}\n\nfunction lerpFrames(values, t, out) {\n  t = clamp(t, 0, 1);\n\n  var len = values.length - 1;\n  var whole = t * len;\n  var frame = Math.floor(whole);\n  var fract = whole - frame;\n\n  var nextFrame = Math.min(frame + 1, len);\n  var a = values[frame % values.length];\n  var b = values[nextFrame % values.length];\n  if (typeof a === \"number\" && typeof b === \"number\") {\n    return lerp(a, b, fract);\n  } else if (Array.isArray(a) && Array.isArray(b)) {\n    return lerpArray(a, b, fract, out);\n  } else {\n    throw new TypeError(\n      \"Mismatch in value type of two array elements: \" +\n        frame +\n        \" and \" +\n        nextFrame\n    );\n  }\n}\n\nfunction mod(a, b) {\n  return ((a % b) + b) % b;\n}\n\nfunction degToRad(n) {\n  return (n * Math.PI) / 180;\n}\n\nfunction radToDeg(n) {\n  return (n * 180) / Math.PI;\n}\n\nfunction fract(n) {\n  return n - Math.floor(n);\n}\n\nfunction sign(n) {\n  if (n > 0) return 1;\n  else if (n < 0) return -1;\n  else return 0;\n}\n\nfunction pingPong(t, length) {\n  t = mod(t, length * 2);\n  return length - Math.abs(t - length);\n}\n\nfunction damp(a, b, lambda, dt) {\n  return lerp(a, b, 1 - Math.exp(-lambda * dt));\n}\n\nfunction dampArray(a, b, lambda, dt, out) {\n  out = out || [];\n  for (var i = 0; i < a.length; i++) {\n    out[i] = damp(a[i], b[i], lambda, dt);\n  }\n  return out;\n}\n\nfunction normalize2D(x, y) {\n  const len = len2D(x, y);\n  return { x: x / len, y: y / len };\n}\n\nfunction len2D(x, y) {\n  return Math.sqrt(x * x + y * y);\n}\n\nfunction mapRange(value, inputMin, inputMax, outputMin, outputMax, clamp) {\n  // Reference:\n  // https://openframeworks.cc/documentation/math/ofMath/\n  if (Math.abs(inputMin - inputMax) < EPSILON) {\n    return outputMin;\n  } else {\n    var outVal =\n      ((value - inputMin) / (inputMax - inputMin)) * (outputMax - outputMin) +\n      outputMin;\n    if (clamp) {\n      if (outputMax < outputMin) {\n        if (outVal < outputMax) outVal = outputMax;\n        else if (outVal > outputMin) outVal = outputMin;\n      } else {\n        if (outVal > outputMax) outVal = outputMax;\n        else if (outVal < outputMin) outVal = outputMin;\n      }\n    }\n    return outVal;\n  }\n}\n\nfunction dist2D(v1, v2) {\n  return len2D(v1.x - v2.x, v1.y - v2.y);\n}\n\nmodule.exports = {\n  mod: mod,\n  fract: fract,\n  sign: sign,\n  degToRad: degToRad,\n  radToDeg: radToDeg,\n  pingPong: pingPong,\n  linspace: linspace,\n  lerp: lerp,\n  lerpArray: lerpArray,\n  inverseLerp: inverseLerp,\n  lerpFrames: lerpFrames,\n  clamp: clamp,\n  clamp01: clamp01,\n  smoothstep: smoothstep,\n  damp: damp,\n  dampArray: dampArray,\n  mapRange: mapRange,\n  expand2D: expandVector(2),\n  expand3D: expandVector(3),\n  expand4D: expandVector(4),\n  normalize2D: normalize2D,\n  len2D: len2D,\n  dist2D: dist2D,\n};\n"],"sourceRoot":""}